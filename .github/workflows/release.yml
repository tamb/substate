name: Release

on:
  push:
    tags:
      - 'v*'
    # Only run on version tags from main branch

permissions:
  contents: write
  id-token: write

jobs:
  # Step 1: Run all validation checks
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run full test suite
        run: |
          npm run check
          npm test
          npm run test:builds
          npm run test:performance
          
      - name: Build package
        run: npm run build
        
      - name: Verify build outputs
        run: |
          test -f dist/index.esm.js
          test -f dist/index.umd.js
          test -f dist/index.d.ts
          echo "‚úÖ All build outputs verified"
          
      - name: Upload build artifacts for publishing
        uses: actions/upload-artifact@v4
        with:
          name: release-build
          path: |
            dist/
            package.json
            README.md
            LICENSE
          retention-days: 1
  
  # Step 2: Prepare release (only if validation passes)
  prepare:
    name: Prepare Release
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      changelog: ${{ steps.changelog.outputs.CHANGELOG }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-build
          
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Update package.json version
        run: npm version ${{ steps.version.outputs.VERSION }} --no-git-tag-version
        
      - name: Verify package integrity
        run: npm pack --dry-run
          
      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            cat CHANGELOG.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=No changelog available" >> $GITHUB_OUTPUT
          fi

  # Step 3: Publish to NPM (only if validation and prepare succeed)
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [validate, prepare]
    if: ${{ !cancelled() && needs.validate.result == 'success' && needs.prepare.result == 'success' }}
    env:
      ENABLE_NPM_PUBLISH: false  # Set to true when ready to publish releases
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-build
          
      - name: Update package.json version
        run: npm version ${{ needs.prepare.outputs.version }} --no-git-tag-version
        
      - name: Check if publishing is enabled
        run: |
          if [ "$ENABLE_NPM_PUBLISH" != "true" ]; then
            echo "‚ùå NPM publishing is disabled (ENABLE_NPM_PUBLISH=$ENABLE_NPM_PUBLISH)"
            echo "To enable: Set ENABLE_NPM_PUBLISH=true in the workflow"
            exit 1
          fi
          echo "‚úÖ NPM publishing is enabled"
        
      - name: Publish to npm
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Step 4: Create GitHub Release (only if NPM publishing succeeds)
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [validate, prepare, publish]
    if: ${{ !cancelled() && needs.validate.result == 'success' && needs.prepare.result == 'success' && needs.publish.result == 'success' }}
    
    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ needs.prepare.outputs.version }}
          body: |
            ## üéâ Substate v${{ needs.prepare.outputs.version }}
            
            ### üì¶ Installation
            ```bash
            npm install substate@${{ needs.prepare.outputs.version }}
            ```
            
            ### üìã Changes
            ${{ needs.prepare.outputs.changelog }}
            
            ### üîó Links
            - [NPM Package](https://www.npmjs.com/package/substate/v/${{ needs.prepare.outputs.version }})
            - [Documentation](https://github.com/tamb/substate#readme)
            - [Performance Benchmarks](https://github.com/tamb/substate/actions/runs/${{ github.run_id }})
            
          draft: false
          prerelease: ${{ contains(needs.prepare.outputs.version, 'alpha') || contains(needs.prepare.outputs.version, 'beta') || contains(needs.prepare.outputs.version, 'rc') }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ needs.prepare.outputs.version }}
          path: |
            dist/
            package.json
            README.md
            LICENSE
          retention-days: 90
